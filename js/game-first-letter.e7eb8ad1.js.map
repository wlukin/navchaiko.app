{"version":3,"file":"js/game-first-letter.e7eb8ad1.js","mappings":"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","sources":["webpack://navchaiko/./src/config/dictionary.js","webpack://navchaiko/./src/mixins/dictionaryMixin.js","webpack://navchaiko/./src/mixins/inputResultGameMixin.js","webpack://navchaiko/./src/mixins/tileListMixin.js","webpack://navchaiko/./src/views/games/FirstLetterView.vue","webpack://navchaiko/./src/views/games/FirstLetterView.vue?feb1"],"sourcesContent":["export const Alphabet = {\n    ua: 'абвгґдеєжзиіїйклмнопрстуфхцчшщьюя',\n    en: 'abcdefghijklmnopqrstuvwxyz',\n};\n\nexport const Dictionary = [\n    {ua: 'полуниця', en: 'strawberry', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'баНан', en: 'banana', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'СлиВа', en: 'pluM', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'персик', en: 'Peach', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'абрикос', en: 'apricot', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'груша', en: 'Pear', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'яблуко', en: 'apple', group: ['їжа', 'рослина', 'фрукт']},\n    {ua: 'огірок', en: 'cucumber', group: ['їжа', 'рослина', 'овоч']},\n    {ua: 'помідор', en: 'tomato', group: ['їжа', 'рослина', 'овоч']},\n    {ua: 'морква', en: 'Carrot', group: ['їжа', 'рослина', 'овоч']},\n    {ua: 'картопля', en: 'potato', group: ['їжа', 'рослина', 'овоч']},\n    {ua: 'морозиво', en: '', group: ['їжа', 'виріб', 'солодощі']},\n    {ua: 'цукерка', en: 'Candy', group: ['їжа', 'виріб', 'солодощі']},\n    {ua: 'Зефір', en: 'marshmallow', group: ['їжа', 'виріб', 'солодощі']},\n    {ua: 'шоколад', en: 'chocolate', group: ['їжа', 'виріб', 'солодощі']},\n    {ua: 'потяг', en: 'Train', group: ['транспорт', 'наземний']},\n    {ua: 'машина', en: 'Car', group: ['транспорт', 'наземний']},\n    {ua: 'автобус', en: 'bus', group: ['транспорт', 'наземний']},\n    {ua: 'літак', en: 'plane', group: ['транспорт', 'повітряний']},\n    {ua: 'гелікоптер', en: 'helicopter', group: ['транспорт', 'повітряний']},\n    {ua: 'лев', en: 'lion', group: ['тварина', 'ссавець', 'африканська']},\n    {ua: 'слон', en: 'elephant', group: ['тварина', 'ссавець', 'африканська']},\n    {ua: 'жирафа', en: 'giraffe', group: ['тварина', 'ссавець', 'африканська']},\n    {ua: 'верблюд', en: 'camel', group: ['тварина', 'ссавець', 'африканська']},\n    {ua: 'заєць', en: 'Hare', group: ['тварина', 'ссавець', 'дика']},\n    {ua: 'ведмідь', en: 'Bear', group: ['тварина', 'ссавець', 'дика']},\n    {ua: 'їжак', en: 'hedgehog', group: ['тварина', 'ссавець', 'дика']},\n    {ua: 'вовк', en: 'Wolf', group: ['тварина', 'ссавець', 'дика']},\n    {ua: 'лисиця', en: 'FoX', group: ['тварина', 'ссавець', 'дика']},\n    {ua: 'акула', en: 'shark', group: ['тварина', 'морська']},\n    {ua: 'кИт', en: 'whale', group: ['тварина', 'морська']},\n    {ua: 'дельфін', en: 'dolphin', group: ['тварина', 'морська']},\n    {ua: 'індик', en: 'turkey', group: ['тварина', 'птах', 'свійська']},\n    {ua: 'курка', en: 'chicken', group: ['тварина', 'птах', 'свійська']},\n    {ua: 'півень', en: 'rooster', group: ['тварина', 'птах', 'свійська']},\n    {ua: 'лелека', en: 'stork', group: ['тварина', 'птах', 'дика']},\n    {ua: 'шпак', en: 'starling', group: ['тварина', 'птах', 'дика']},\n    {ua: 'Качка', en: 'Duck', group: ['тварина', 'птах', 'дика']},\n    {ua: 'КІТ', en: 'Rat', group: ['тварина', 'ссавець', 'домашня']},\n    {ua: 'собака', en: 'Dog', group: ['тварина', 'ссавець', 'домашня']},\n    {ua: 'корова', en: 'Сow', group: ['тварина', 'ссавець', 'свійська']},\n    {ua: 'КоЗа', en: 'Goat', group: ['тварина', 'ссавець', 'свійська']},\n    {ua: 'свиня', en: 'Pig', group: ['тварина', 'ссавець', 'свійська']},\n    {ua: 'Кінь', en: 'Horse', group: ['тварина', 'ссавець', 'свійська']},\n    {ua: 'кролик', en: 'rabbit', group: ['тварина', 'ссавець', 'свійська']},\n];\n\n// export default Synonims = [\n//     [\"луна\",\"відляск\",\"відзвук\",\"відлунок\",\"відлуння\"],\n//     [\"завірюха\",\"віхола\",\"буран\",\"зав'юга\",\"метелиця\",\"метіль\",\"охиза\",\"\",\"\",\"\"],\n//     [\"\",\"\",\"\",\"\"],\n//     [\"\",\"\",\"\",\"\"],\n//     [\"\",\"\",\"\",\"\"],\n//     [\"\",\"\",\"\",\"\"],\n//     [\"\",\"\",\"\",\"\"],\n// ];","import { Alphabet, Dictionary } from '../config/dictionary';\n\nexport default {\n    data() {\n        return {\n            dictionaryListId: {},\n        }\n    },\n    methods: {\n        dictionaryGetAlphabet(lang) {\n            return Alphabet[lang]\n        },\n        dictionaryGetWordByList(lang) {\n            if (!this.dictionaryListId[lang] || this.dictionaryListId[lang].length === 0) {\n                this.dictionaryBildListId(lang);\n            }\n            return Dictionary[this.dictionaryListId[lang].pop()];\n        },\n        dictionaryBildListId(lang) {\n            this.dictionaryListId[lang] = [...Dictionary.keys()]\n                .filter(v => Dictionary[v][lang])\n                .sort(() => 0.5 - Math.random());\n        },\n    }\n}","export default {\n    data() {\n        return {\n            assertResult: '',\n            resultFlag: null,\n            inputFlag: false,\n            resultList: [],\n            inputList: [],\n        }\n    },\n    mounted() {\n        this.gameNextLevel();\n    },\n    methods: {\n        gameRefreshLevel() {\n            this.inputList = this.buildInputList();\n            this.resultList = this.buildResultList();\n        },\n        gameNextLevel() {\n            this.assertResult = this.buildAssertResult();\n            this.gameRefreshLevel();\n        },\n        gameCheckResult() {\n            const assertResult = this.resultList.map(e => e.value).join('');\n            this.resultFlag = (assertResult === this.assertResult);\n            this.inputFlag = false;\n        }\n    },\n    watch: {\n        resultList: {\n            handler(resultList) {\n                const assertResult = resultList.map(e => e.value).join('');\n                this.inputFlag = assertResult.length === this.assertResult.length;\n                this.resultFlag = null;\n            },\n            deep: true\n        },\n    }\n}","export default {\n    methods: {\n        tileListFindById(tileList, id) {\n            return tileList.find(e => e.id === id);\n        },\n        tileListFindIdle(tileList) {\n            return tileList.find((e) => {\n                return e.relationId === null && e.value === null;\n            });\n        },\n        tileListRemoveGap(tileList, gapId, tileListRelation) {\n            for (let i = gapId; i < tileList.length; i++) {\n                if (i === tileList.length-1 || tileList[i+1].relationId === null) {\n                    tileList[i].relationId = null;\n                    tileList[i].value = null;\n                    tileList[i].class.used = false;\n                    break;\n                }\n                tileList[i].relationId = tileList[i+1].relationId;\n                tileList[i].value = tileList[i+1].value;\n                tileList[i].class.used = tileList[i+1].class.used;\n                \n                //fix relation\n                if (tileListRelation && tileListRelation[tileList[i].relationId]) {\n                    tileListRelation[tileList[i].relationId].relationId = i; \n                }   \n            }\n        },\n    }\n}","<template>\n    <InputResultGame\n        :inputFlag=\"inputFlag\"\n        :resultFlag=\"resultFlag\"\n        :resultList=\"resultList\"\n        :inputList=\"inputList\"\n        :gameId=\"gameId\"\n        :modeId=\"modeId\"\n        :backCategoryId=\"buildCategoryId()\"\n        @clickTileInput=\"clickTileInput\"\n        @clickTileResult=\"clickTileResult\"\n        @clickControlRefresh=\"gameRefreshLevel\"\n        @clickControlNext=\"gameNextLevel\"\n        @clickControlCheck=\"gameCheckResult\"\n    />\n</template>\n\n<script>\nimport tileMixin from '@/mixins/tileMixin';\nimport tileListMixin from '@/mixins/tileListMixin';\nimport dictionaryMixin from '@/mixins/dictionaryMixin';\nimport inputResultGameMixin from '@/mixins/inputResultGameMixin';\nimport InputResultGame from '@/components/InputResultGame'\nimport modeMixin from '@/mixins/modeMixin'\nimport { arrayFrom } from '@/utils';\n\nexport default {\n    mixins: [\n        tileMixin,\n        tileListMixin,\n        dictionaryMixin,\n        inputResultGameMixin,\n        modeMixin,\n    ],\n    components: {\n        InputResultGame,\n    },\n    data() {\n        return {\n            mode: {\n                lang: 'ua',\n            },\n        };\n    },\n    created() {\n        this.buildMode()\n    },\n    methods: {\n        clickTileInput(inputTile) {\n            this.tileBindByTile(this.tileListFindIdle(this.resultList), inputTile, false);\n        },\n        clickTileResult(resultTile) {\n            if (this.resultFlag !== true && this.tileIsUsed(resultTile)) {\n                this.tileUnbind(resultTile, true);\n            }\n        },\n        buildAssertResult() {\n            let word, letter;\n            // eslint-disable-next-line\n            while (true) {\n                word = this.dictionaryGetWordByList(this.mode.lang)[this.mode.lang];\n                letter = word[0];\n                if (letter === letter.toLowerCase()) {\n                    return word.toLowerCase();\n                }\n            }\n        },\n        buildInputList() {\n            return arrayFrom(this.dictionaryGetAlphabet(this.mode.lang)).map(\n                (v, i) => {\n                    return this.tileLetterCreate(i, v);\n                }\n            );\n        },\n        buildResultList() {\n            return arrayFrom(this.assertResult).map((v, i) => {\n                return this.tileLetterCreate(i, i === 0 ? null : v);\n            });\n        }\n    },\n}\n</script>","import { render } from \"./FirstLetterView.vue?vue&type=template&id=36514b2b\"\nimport script from \"./FirstLetterView.vue?vue&type=script&lang=js\"\nexport * from \"./FirstLetterView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["Alphabet","ua","en","Dictionary","group","data","dictionaryListId","methods","dictionaryGetAlphabet","lang","dictionaryGetWordByList","this","length","dictionaryBildListId","pop","keys","filter","v","sort","Math","random","assertResult","resultFlag","inputFlag","resultList","inputList","mounted","gameNextLevel","gameRefreshLevel","buildInputList","buildResultList","buildAssertResult","gameCheckResult","map","e","value","join","watch","handler","deep","tileListFindById","tileList","id","find","tileListFindIdle","relationId","tileListRemoveGap","gapId","tileListRelation","i","class","used","_createBlock","_component_InputResultGame","_ctx","gameId","modeId","backCategoryId","buildCategoryId","onClickTileInput","$options","clickTileInput","onClickTileResult","clickTileResult","onClickControlRefresh","onClickControlNext","onClickControlCheck","mixins","tileMixin","tileListMixin","dictionaryMixin","inputResultGameMixin","modeMixin","components","InputResultGame","mode","created","buildMode","inputTile","tileBindByTile","resultTile","tileIsUsed","tileUnbind","word","letter","toLowerCase","arrayFrom","tileLetterCreate","__exports__","render"],"sourceRoot":""}